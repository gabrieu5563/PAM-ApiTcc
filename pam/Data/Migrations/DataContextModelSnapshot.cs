// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pam.Data;

#nullable disable

namespace pam.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("pam.Models.Sugestao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("TB_SUGESTAO", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Pedir Ifood",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Text = "Ajuda no Uber",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            Text = "Logar no email",
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 4,
                            Text = "Mandar mensagem no Whatsapp",
                            UsuarioId = 3
                        },
                        new
                        {
                            Id = 5,
                            Text = "Navegar pelo Facebook",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("pam.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("Varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIO", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "João Silva",
                            Senha = "senha123",
                            Telefone = "11999999999"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Maria Oliveira",
                            Senha = "senha456",
                            Telefone = "11988888888"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Carlos Souza",
                            Senha = "senha789",
                            Telefone = "11977777777"
                        });
                });

            modelBuilder.Entity("pam.Models.Sugestao", b =>
                {
                    b.HasOne("pam.Models.Usuario", "Usuario")
                        .WithMany("Sugestoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("pam.Models.Usuario", b =>
                {
                    b.Navigation("Sugestoes");
                });
#pragma warning restore 612, 618
        }
    }
}
